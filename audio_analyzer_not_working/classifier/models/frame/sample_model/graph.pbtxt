node {
  name: "global_step/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "mul"
  op: "Mul"
  input: "global_step/read"
  input: "mul/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "mul_1"
  op: "Mul"
  input: "mul"
  input: "mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/initial_learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4000000.0
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.949999988079071
      }
    }
  }
}
node {
  name: "ExponentialDecay/Cast_2"
  op: "Cast"
  input: "mul_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/truediv"
  op: "RealDiv"
  input: "ExponentialDecay/Cast_2"
  input: "ExponentialDecay/Cast/x"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/Floor"
  op: "Floor"
  input: "ExponentialDecay/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay/Pow"
  op: "Pow"
  input: "ExponentialDecay/Cast_1/x"
  input: "ExponentialDecay/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "ExponentialDecay"
  op: "Mul"
  input: "ExponentialDecay/initial_learning_rate"
  input: "ExponentialDecay/Pow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "learning_rate/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "learning_rate"
      }
    }
  }
}
node {
  name: "learning_rate"
  op: "ScalarSummary"
  input: "learning_rate/tags"
  input: "ExponentialDecay"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1444
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1444
          }
        }
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ft.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/k4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_a.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8N.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/d5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/bk.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/VC.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ey.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/A6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/T-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8I.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/RA.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/X_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/gY.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1q.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2u.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ZF.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/lH.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/J4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/56.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/vx.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1E.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/wv.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/R9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/dq.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/J2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/10.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/G4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/36.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/J-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/59.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-k.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/g_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/U8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/S4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/S8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/r5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/bf.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0I.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/FC.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/U5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/jL.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/83.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/QV.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/px.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/T8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/t_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9L.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Cb.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/DX.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/L_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/33.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ka.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/kZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_S.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/R_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/XE.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/A3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/M5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/W2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/RW.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2d.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/td.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_O.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4a.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/OX.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/tL.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/NR.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/i3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9D.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1S.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/D7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/qP.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Wi.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/H8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/E8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/oN.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ir.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/aF.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/yS.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/RQ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/AB.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/J1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ao.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Z_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ld.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/nF.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/88.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/sa.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/lx.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/sR.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-L.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/kM.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/PP.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/rL.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/zT.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/S0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-Y.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/HD.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5L.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/nC.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/bg.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3O.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5q.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/eO.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Pg.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/79.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/uw.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/gt.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/UH.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/W0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ZR.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/v3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/yE.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Tx.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/tP.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/95.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ky.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/VV.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Gk.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/sG.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/qx.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/qm.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/SK.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Z1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Bp.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2y.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/TC.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/G8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/RX.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/MS.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/QB.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Z9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/V6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/W8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Vq.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ij.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/m0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/po.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/EA.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/e0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/W_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/UQ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1d.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/lW.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/HW.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/hL.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Y4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/i9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/pC.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/gs.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/22.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7c.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/w4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/85.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Cn.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/xj.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/TB.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9z.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-O.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/DT.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/dj.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/XF.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6R.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Zd.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/96.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/M6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/dI.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Bb.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Yn.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/20.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Lj.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/lT.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2B.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Hv.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/g2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/CA.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1v.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/o1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/jf.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/V_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/H6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6O.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/tE.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/MO.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/tY.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/c9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/qD.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/27.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/21.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/H1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/97.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/p3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/uk.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Dh.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/QE.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/06.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ci.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/o3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Md.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/MW.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/K5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/DB.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/co.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/J6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5Z.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/cz.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/e7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/PB.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/DD.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/RG.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8P.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/o6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/VE.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/qZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/GO.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7j.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/pm.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/I8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/j3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Op.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Kr.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8D.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4n.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/D0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/mP.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/wH.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/X0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5v.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ff.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/vR.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/30.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_Y.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/SI.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/XQ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1z.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3g.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6H.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Em.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/X5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/os.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Jk.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0w.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9x.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/jG.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/aT.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/gq.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2T.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/xI.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/v1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/i0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/oq.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5b.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Hr.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ZC.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-a.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/pU.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Zi.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/98.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3N.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_k.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/jz.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/A5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Re.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/dO.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/BQ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6Z.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6V.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/gA.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Fd.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/N9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/rP.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/x4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/b9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_u.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/wT.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/LV.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Oc.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/kF.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7N.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/MT.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/pE.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/00.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/u0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_j.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/LS.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/fJ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/mc.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/KO.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-U.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/yW.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/kd.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/xL.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/02.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/hy.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3J.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/32.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/J7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/sd.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ZA.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/EZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/h4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Kv.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Y1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/k8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/a4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/F_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/TW.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7b.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/cS.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/n0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/25.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/nq.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4z.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/sZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ud.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/qW.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7O.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/G5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/fP.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4Y.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Nk.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/pW.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/y9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/12.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ET.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Qs.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/kC.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_r.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5w.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/lF.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/09.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/KJ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/He.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3r.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/39.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/l7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/F0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/v2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/y8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/dG.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8Z.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/s1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1R.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/wu.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/aj.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2e.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Cr.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6m.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/mE.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/jM.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/LE.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/14.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/C6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/N3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/D1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/f4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0A.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/D4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Gw.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/tV.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/i-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-P.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2r.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/q8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/E2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/QQ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Hb.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/40.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/dl.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/C5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/o-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/r6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ni.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/yZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7z.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1m.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/wz.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/VB.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2a.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/SJ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/tm.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_n.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/w-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ki.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/yL.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/oi.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3q.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9o.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/n8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/bm.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/VJ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Oh.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2N.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-D.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/gb.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7d.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9g.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/13.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2p.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/w5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/zm.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/J0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/q0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/E3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4b.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/r0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5T.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1n.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/R3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/--.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-e.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Pk.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/vL.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/h7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8b.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/rY.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_X.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/M1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/t6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ph.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/It.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/VZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/L8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/qL.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/q3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/h_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1A.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/B3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/b2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/M_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/F6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0Q.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6e.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/34.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/i_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9N.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2S.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/B-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/df.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1H.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Bs.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/TR.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/mU.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/dn.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ep.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/kW.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/fw.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/mL.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/A1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3l.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8F.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/wA.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/IQ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Zq.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/uA.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/UZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/T3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/66.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/g6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/MJ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5e.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6Y.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/P7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/JU.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/vt.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/U2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3s.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/FO.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/p6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8t.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Nw.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/CW.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8j.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Cu.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ds.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4j.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Vm.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/x-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8c.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/OK.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Q-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Fb.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_p.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/p1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/WK.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/49.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/hh.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Xg.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/WO.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Rb.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8U.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/nh.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3P.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Eq.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/nP.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Cl.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1f.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_L.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4D.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/mV.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9w.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/u9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-H.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/bA.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/aZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-S.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/dP.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/U-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/jc.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/08.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/cX.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/XM.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/vh.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/v-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9K.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6j.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/U3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/HN.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/p5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/W1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/jh.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/We.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/KB.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/JS.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/CT.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/C3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/d8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/m3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/MI.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6S.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/El.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/94.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/EI.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/z2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Cq.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/17.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/R2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Bh.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/FZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9V.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-q.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/p0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/aK.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/I4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Mn.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/t1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/xt.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Vo.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/KG.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2o.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Dr.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2Q.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/t7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/wJ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/qG.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/IG.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/q9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2J.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/GM.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/sL.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/L-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Us.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Hu.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/uP.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/u7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-T.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6P.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ad.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/hj.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/67.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/qO.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Zk.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/X2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/b1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/gn.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4L.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/AQ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/C8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Cd.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/N7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4q.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/T4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8l.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Kp.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/pD.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/TJ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/89.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/81.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/k9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/AM.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9T.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0R.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/RV.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/bI.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Y3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/my.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4C.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/53.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Sh.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/jJ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Vd.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/51.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/NZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Bj.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/z0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/g9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-x.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/WP.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/oD.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Hk.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7i.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9A.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/P4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/f5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Gl.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ke.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/04.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/fx.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/nt.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/A_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ym.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0V.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ov.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Zv.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Bl.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2V.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/p8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/NX.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/xk.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Aa.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Dk.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/bT.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/a9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/wc.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/kk.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/fR.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4T.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2M.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/oa.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/uv.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/cg.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/h-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/yj.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/VS.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9m.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/lp.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Hq.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ny.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/73.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/pR.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7q.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/dA.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/iZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7x.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1W.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/l5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/jV.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/D6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ck.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1y.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/wY.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/v4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ht.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/XR.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/iX.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9H.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/50.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7S.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/n1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/oG.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/26.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0L.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/h9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8k.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/93.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_I.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/D_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0k.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/UU.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/fh.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7F.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ya.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ma.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8x.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/kh.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0M.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/zp.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/K1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/84.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/60.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/pI.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/WB.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/N2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/xp.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/jQ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/kX.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/19.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4x.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/as.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7E.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Li.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/bZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0B.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/rz.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/lA.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Yf.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/pv.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/35.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/IY.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/gU.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ha.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ws.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/wL.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6K.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/80.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/UM.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/u1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0O.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7w.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/42.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/c7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ug.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/py.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/68.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/is.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/mQ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/G1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/If.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/MK.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ay.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/fa.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/kS.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/bd.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/k0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ag.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8q.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/V8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/bO.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ta.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/NJ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/yO.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/MH.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7K.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/31.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Oz.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ai.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ji.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Pq.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6b.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/KU.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7a.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/I2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9R.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5u.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/aL.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/kQ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/FL.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/qr.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/OE.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8E.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/24.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Er.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/S9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/cF.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/h2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/th.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Je.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/un.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/M7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ap.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/R7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Vu.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5N.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2g.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9B.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/jy.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3H.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4H.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5J.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/dY.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/75.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9f.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8R.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Uo.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/o8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/YG.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0n.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3z.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1K.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/28.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-V.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/s7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0h.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/o9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/W9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/55.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/bR.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/l0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/TQ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Iu.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/q1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3X.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8s.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8H.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/yB.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/c1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/J9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8a.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Vk.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/eK.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3C.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/n_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/XO.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/P9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/m8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/SN.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/So.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1B.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/yh.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6U.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/C_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_e.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/SS.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/g-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6D.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/y_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/86.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/K6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/48.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_M.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5i.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Y5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/FI.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1x.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Nv.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ts.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/gx.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/t5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/NG.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/16.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/YV.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3a.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8W.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/XD.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-r.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Cj.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1g.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/JB.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/UR.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/F8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2h.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/43.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0y.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7t.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0T.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3b.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/zN.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/lL.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Q7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/x9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/11.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/IA.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/03.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ae.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/q_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/A7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/LZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/lC.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Pa.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/u4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/yx.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/EJ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7y.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7v.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/U6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/eD.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/H5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/B4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/o2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/N5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/46.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7h.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/J5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/zs.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/52.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Jw.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/GE.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/GV.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9s.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/eh.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/05.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Z7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1T.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/bW.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/t0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ev.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Gf.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/r1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8Y.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/P-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/IP.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/z-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-C.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/07.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-z.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Pl.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/LQ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Qt.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6N.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ob.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/gj.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/oY.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ch.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ah.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0U.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/fm.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/O_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/FV.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/OJ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Kt.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5s.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/hO.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Xb.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/d9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/dm.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Gp.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0g.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/GI.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Zx.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/E6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/fE.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/S2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6I.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/No.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/oU.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/S6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/gC.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6w.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/F9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Mx.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0Z.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/g0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Nm.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/CV.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9e.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/99.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/SU.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Wx.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/zu.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/29.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ja.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/mz.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/70.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/P2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8V.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3k.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/qI.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/XV.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/E9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/gD.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/71.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4S.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/uC.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/iI.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/N6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0J.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Z5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Kl.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/z4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Q5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/EE.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Xa.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/kn.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/FU.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/82.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4U.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-I.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/bU.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/gg.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/IE.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Au.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/k3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/LB.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/S3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/io.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Sc.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Sy.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ue.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-W.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6G.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2k.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3e.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/B7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6a.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/j_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Rt.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/B5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/OL.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-n.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/RR.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/hC.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Q4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3w.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/YU.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/YI.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/bE.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/u_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Vn.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/TI.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4r.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/va.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3m.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Na.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6c.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/iD.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ST.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ot.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/B8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5X.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8G.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2L.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/bn.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/E-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9j.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/rI.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9y.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/HS.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/hi.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/B0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/A-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/k-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1p.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2f.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3T.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2x.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/mm.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8o.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/V0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/E5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Vi.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/CY.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ns.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/n-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Tu.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/FN.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/jT.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5K.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_D.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/37.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Y0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Jo.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5A.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/FK.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/RS.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/L2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Tt.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/EU.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/hF.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/x7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ui.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/74.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Q6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/aV.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5M.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/q2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/62.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/TZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Zw.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/sM.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/C4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4p.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6l.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1L.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/23.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/72.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/xx.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/XW.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/01.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5d.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5G.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/tN.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/EC.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/s5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6f.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_T.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/qj.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1i.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/15.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/zH.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5p.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/IL.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/69.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/wf.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/YD.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0d.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/57.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/xH.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ih.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9p.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/nB.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/H0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/YT.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9C.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/YP.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/IK.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/y-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/mb.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/T9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5H.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/f7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/f2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Of.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/vW.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/LG.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/45.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Pt.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/v9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/om.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/8M.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/rK.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/mr.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/RO.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/aC.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Zl.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Hx.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/sB.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/J8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Zo.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/X8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ux.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-g.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/pf.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4M.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/f-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ln.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/s_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/77.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/zJ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/44.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7r.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4I.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/xy.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/hP.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/V7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/w7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Sp.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2w.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/CC.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/bx.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/tO.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Yq.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-f.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/WW.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5Y.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6T.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/L6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/VP.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/e1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/es.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/k2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ic.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/r8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3i.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/18.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/I6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-J.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/XZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/pJ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Z6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/76.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/E_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/D-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/sq.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/y2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ub.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/61.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/O7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/sF.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/VF.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/DV.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2Z.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/zE.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_W.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Sw.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7g.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1U.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Bv.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_H.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/I7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/91.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Nd.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Lu.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0P.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/pn.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Rh.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/GR.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/87.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7m.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Tk.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3v.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Uj.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/qA.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Se.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/oW.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Eb.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Nu.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Xc.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Yy.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/m-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/cM.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/fy.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7l.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/r-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9U.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4f.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/p_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/64.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/zg.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/k_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/D2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/E4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/mG.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/t2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/I5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Cp.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/w6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Du.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/L3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ne.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/bC.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/SV.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9i.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/B6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/tf.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/W3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3D.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/38.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/mf.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/78.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/YC.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Yr.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-m.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/92.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2C.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0S.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5O.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/wn.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/m4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/9Q.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/O4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/f1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3y.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5C.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/G7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/d3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-b.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Wq.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/l1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4g.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/IN.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4k.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7p.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/uf.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/En.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Jp.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/rf.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/H3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_Z.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/l9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6Q.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/k7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/wD.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ar.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/yk.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/hg.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/DZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/iv.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Qc.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Qy.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/7U.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2i.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/i1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/c-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_c.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/AX.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/eF.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1j.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/47.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/M2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/oR.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Uy.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Gz.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_q.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/O5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Y7.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ul.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/qH.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Y6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/M9.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ZY.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/l4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/63.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/FG.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Wm.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/qu.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/FQ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/AW.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/X1.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/6X.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Hm.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Jr.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/fs.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Qk.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/s-.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/C2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Qf.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/B_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/a0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Zz.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0C.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0F.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/De.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4V.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ib.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_V.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/2_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/oo.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/f3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4e.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/WR.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/dC.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3u.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/g3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ps.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0e.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/rc.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/-2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/rM.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/LO.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/nN.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/rJ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Jx.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5R.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0x.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Dw.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_b.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/JD.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Ew.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/tg.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Lk.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/54.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/eX.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/aN.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/__.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Vy.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/65.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/Xs.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/nL.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1C.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/gh.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/im.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ly.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/58.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/c0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/by.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/3F.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/RN.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/wG.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/N4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/HZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/xu.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/X6.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/x3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/XN.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_f.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/vG.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/o0.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/RU.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/UT.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4o.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/SX.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/QN.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/jn.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/0_.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/v5.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/_G.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/5F.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/z3.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/lR.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/4W.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/41.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/a8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/lM.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/R4.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/iW.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/zB.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/PZ.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/ce.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/a2.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/rD.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/z8.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/1o.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/EG.tfrecord"
        string_val: "/home/ubuntu/EE542_final_project/audioset_v1_embeddings/unbal_train/90.tfrecord"
      }
    }
  }
}
node {
  name: "train_input/input_producer/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1444
      }
    }
  }
}
node {
  name: "train_input/input_producer/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/input_producer/Greater"
  op: "Greater"
  input: "train_input/input_producer/Size"
  input: "train_input/input_producer/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input/input_producer/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input/input_producer/Assert/Assert"
  op: "Assert"
  input: "train_input/input_producer/Greater"
  input: "train_input/input_producer/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "train_input/input_producer/Identity"
  op: "Identity"
  input: "train_input/input_producer/Const"
  input: "^train_input/input_producer/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1444
          }
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/RandomShuffle"
  op: "RandomShuffle"
  input: "train_input/input_producer/Identity"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1444
          }
        }
      }
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs/epochs"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs/epochs/Assign"
  op: "Assign"
  input: "train_input/input_producer/limit_epochs/epochs"
  input: "train_input/input_producer/limit_epochs/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/input_producer/limit_epochs/epochs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs/epochs/read"
  op: "Identity"
  input: "train_input/input_producer/limit_epochs/epochs"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/input_producer/limit_epochs/epochs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs/CountUpTo"
  op: "CountUpTo"
  input: "train_input/input_producer/limit_epochs/epochs"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/input_producer/limit_epochs/epochs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "limit"
    value {
      i: 5
    }
  }
}
node {
  name: "train_input/input_producer/limit_epochs"
  op: "Identity"
  input: "train_input/input_producer/RandomShuffle"
  input: "^train_input/input_producer/limit_epochs/CountUpTo"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1444
          }
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/input_producer/input_producer_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "train_input/input_producer"
  input: "train_input/input_producer/limit_epochs"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/input_producer/input_producer_Close"
  op: "QueueCloseV2"
  input: "train_input/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/input_producer/input_producer_Close_1"
  op: "QueueCloseV2"
  input: "train_input/input_producer"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input/input_producer/input_producer_Size"
  op: "QueueSizeV2"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/Cast"
  op: "Cast"
  input: "train_input/input_producer/input_producer_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "train_input/input_producer/mul"
  op: "Mul"
  input: "train_input/input_producer/Cast"
  input: "train_input/input_producer/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/input_producer/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input/input_producer/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "train_input/input_producer/fraction_of_32_full"
  op: "ScalarSummary"
  input: "train_input/input_producer/fraction_of_32_full/tags"
  input: "train_input/input_producer/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadV2"
  op: "ReaderReadV2"
  input: "train_input/TFRecordReaderV2"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/context_sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/context_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "video_id"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/feature_list_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "audio_embedding"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/debug_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample"
  op: "ParseSingleSequenceExample"
  input: "train_input/ReaderReadV2:1"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/context_sparse_keys_0"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/context_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/feature_list_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample/Const"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample/debug_name"
  attr {
    key: "Ncontext_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Ncontext_sparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "Tcontext_dense"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "context_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "context_sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "feature_list_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "feature_list_dense_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "feature_list_sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample:4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast"
  op: "Cast"
  input: "train_input/DecodeRaw"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape"
  op: "Reshape"
  input: "train_input/Cast"
  input: "train_input/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape"
  op: "Shape"
  input: "train_input/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice"
  op: "StridedSlice"
  input: "train_input/Shape"
  input: "train_input/strided_slice/stack"
  input: "train_input/strided_slice/stack_1"
  input: "train_input/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum"
  op: "Minimum"
  input: "train_input/strided_slice"
  input: "train_input/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul"
  op: "Mul"
  input: "train_input/Reshape"
  input: "train_input/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add"
  op: "Add"
  input: "train_input/mul"
  input: "train_input/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_1"
  op: "Shape"
  input: "train_input/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack"
  op: "Unpack"
  input: "train_input/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub"
  op: "Sub"
  input: "train_input/sub/x"
  input: "train_input/unstack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum"
  op: "Maximum"
  input: "train_input/Maximum/x"
  input: "train_input/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_1"
  op: "Minimum"
  input: "train_input/unstack"
  input: "train_input/Minimum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack"
  op: "Pack"
  input: "train_input/Minimum_1"
  input: "train_input/unstack:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice"
  op: "Slice"
  input: "train_input/add"
  input: "train_input/zeros_like"
  input: "train_input/stack"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_1"
  op: "Pack"
  input: "train_input/Maximum"
  input: "train_input/unstack:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_1"
  op: "Cast"
  input: "train_input/Cast_1/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill"
  op: "Fill"
  input: "train_input/stack_1"
  input: "train_input/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat"
  op: "ConcatV2"
  input: "train_input/Slice"
  input: "train_input/Fill"
  input: "train_input/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_2"
  op: "Minimum"
  input: "train_input/Minimum"
  input: "train_input/Minimum_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/concat_1/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/concat_1"
  op: "Identity"
  input: "train_input/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/ExpandDims"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample:1"
  input: "train_input/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ones_like/Shape"
  op: "Shape"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/ones_like"
  op: "Fill"
  input: "train_input/ones_like/Shape"
  input: "train_input/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/SparseTensor/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 3862
      }
    }
  }
}
node {
  name: "train_input/SparseToDense/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "train_input/SparseToDense"
  op: "SparseToDense"
  input: "train_input/ExpandDims"
  input: "train_input/SparseTensor/dense_shape"
  input: "train_input/ones_like"
  input: "train_input/SparseToDense/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/ExpandDims_1/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_1"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample/ParseSingleSequenceExample:3"
  input: "train_input/ExpandDims_1/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_2/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_2"
  op: "ExpandDims"
  input: "train_input/concat_1"
  input: "train_input/ExpandDims_2/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_3/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_3"
  op: "ExpandDims"
  input: "train_input/SparseToDense"
  input: "train_input/ExpandDims_3/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_4/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_4"
  op: "ExpandDims"
  input: "train_input/Minimum_2"
  input: "train_input/ExpandDims_4/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2_1"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadV2_1"
  op: "ReaderReadV2"
  input: "train_input/TFRecordReaderV2_1"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/context_sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/context_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "video_id"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/feature_list_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "audio_embedding"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/debug_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample"
  op: "ParseSingleSequenceExample"
  input: "train_input/ReaderReadV2_1:1"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/context_sparse_keys_0"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/context_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/feature_list_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_1/Const"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample/debug_name"
  attr {
    key: "Ncontext_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Ncontext_sparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "Tcontext_dense"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "context_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "context_sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "feature_list_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "feature_list_dense_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "feature_list_sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_1"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample:4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_2"
  op: "Cast"
  input: "train_input/DecodeRaw_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_1"
  op: "Reshape"
  input: "train_input/Cast_2"
  input: "train_input/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_2"
  op: "Shape"
  input: "train_input/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_1"
  op: "StridedSlice"
  input: "train_input/Shape_2"
  input: "train_input/strided_slice_1/stack"
  input: "train_input/strided_slice_1/stack_1"
  input: "train_input/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_3"
  op: "Minimum"
  input: "train_input/strided_slice_1"
  input: "train_input/Minimum_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_1"
  op: "Mul"
  input: "train_input/Reshape_1"
  input: "train_input/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_1"
  op: "Add"
  input: "train_input/mul_1"
  input: "train_input/add_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_3"
  op: "Shape"
  input: "train_input/add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_1"
  op: "Unpack"
  input: "train_input/Shape_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_1"
  op: "Sub"
  input: "train_input/sub_1/x"
  input: "train_input/unstack_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_1/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_1"
  op: "Maximum"
  input: "train_input/Maximum_1/x"
  input: "train_input/sub_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_4/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_4"
  op: "Minimum"
  input: "train_input/unstack_1"
  input: "train_input/Minimum_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_2"
  op: "Pack"
  input: "train_input/Minimum_4"
  input: "train_input/unstack_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_1"
  op: "Slice"
  input: "train_input/add_1"
  input: "train_input/zeros_like_1"
  input: "train_input/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_3"
  op: "Pack"
  input: "train_input/Maximum_1"
  input: "train_input/unstack_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_3/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_3"
  op: "Cast"
  input: "train_input/Cast_3/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_1"
  op: "Fill"
  input: "train_input/stack_3"
  input: "train_input/Cast_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_2"
  op: "ConcatV2"
  input: "train_input/Slice_1"
  input: "train_input/Fill_1"
  input: "train_input/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_5/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_5"
  op: "Minimum"
  input: "train_input/Minimum_3"
  input: "train_input/Minimum_5/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/concat_3/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/concat_3"
  op: "Identity"
  input: "train_input/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_5/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_5"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample:1"
  input: "train_input/ExpandDims_5/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ones_like_1/Shape"
  op: "Shape"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/ones_like_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/ones_like_1"
  op: "Fill"
  input: "train_input/ones_like_1/Shape"
  input: "train_input/ones_like_1/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/SparseTensor_1/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 3862
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_1/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_1"
  op: "SparseToDense"
  input: "train_input/ExpandDims_5"
  input: "train_input/SparseTensor_1/dense_shape"
  input: "train_input/ones_like_1"
  input: "train_input/SparseToDense_1/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/ExpandDims_6/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_6"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_1/ParseSingleSequenceExample:3"
  input: "train_input/ExpandDims_6/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_7/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_7"
  op: "ExpandDims"
  input: "train_input/concat_3"
  input: "train_input/ExpandDims_7/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_8/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_8"
  op: "ExpandDims"
  input: "train_input/SparseToDense_1"
  input: "train_input/ExpandDims_8/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_9/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_9"
  op: "ExpandDims"
  input: "train_input/Minimum_5"
  input: "train_input/ExpandDims_9/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2_2"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadV2_2"
  op: "ReaderReadV2"
  input: "train_input/TFRecordReaderV2_2"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/context_sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/context_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "video_id"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/feature_list_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "audio_embedding"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/debug_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample"
  op: "ParseSingleSequenceExample"
  input: "train_input/ReaderReadV2_2:1"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/context_sparse_keys_0"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/context_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/feature_list_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_2/Const"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample/debug_name"
  attr {
    key: "Ncontext_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Ncontext_sparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "Tcontext_dense"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "context_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "context_sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "feature_list_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "feature_list_dense_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "feature_list_sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_2"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample:4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_4"
  op: "Cast"
  input: "train_input/DecodeRaw_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_2/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_2"
  op: "Reshape"
  input: "train_input/Cast_4"
  input: "train_input/Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_4"
  op: "Shape"
  input: "train_input/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_2"
  op: "StridedSlice"
  input: "train_input/Shape_4"
  input: "train_input/strided_slice_2/stack"
  input: "train_input/strided_slice_2/stack_1"
  input: "train_input/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_6/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_6"
  op: "Minimum"
  input: "train_input/strided_slice_2"
  input: "train_input/Minimum_6/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_2"
  op: "Mul"
  input: "train_input/Reshape_2"
  input: "train_input/mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_2/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_2"
  op: "Add"
  input: "train_input/mul_2"
  input: "train_input/add_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_5"
  op: "Shape"
  input: "train_input/add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_2"
  op: "Unpack"
  input: "train_input/Shape_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_2"
  op: "Sub"
  input: "train_input/sub_2/x"
  input: "train_input/unstack_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_2/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_2"
  op: "Maximum"
  input: "train_input/Maximum_2/x"
  input: "train_input/sub_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_7/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_7"
  op: "Minimum"
  input: "train_input/unstack_2"
  input: "train_input/Minimum_7/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_4"
  op: "Pack"
  input: "train_input/Minimum_7"
  input: "train_input/unstack_2:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_2"
  op: "Slice"
  input: "train_input/add_2"
  input: "train_input/zeros_like_2"
  input: "train_input/stack_4"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_5"
  op: "Pack"
  input: "train_input/Maximum_2"
  input: "train_input/unstack_2:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_5/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_5"
  op: "Cast"
  input: "train_input/Cast_5/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_2"
  op: "Fill"
  input: "train_input/stack_5"
  input: "train_input/Cast_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_4"
  op: "ConcatV2"
  input: "train_input/Slice_2"
  input: "train_input/Fill_2"
  input: "train_input/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_8/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_8"
  op: "Minimum"
  input: "train_input/Minimum_6"
  input: "train_input/Minimum_8/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/concat_5/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/concat_5"
  op: "Identity"
  input: "train_input/concat_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_10/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_10"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample:1"
  input: "train_input/ExpandDims_10/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ones_like_2/Shape"
  op: "Shape"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/ones_like_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/ones_like_2"
  op: "Fill"
  input: "train_input/ones_like_2/Shape"
  input: "train_input/ones_like_2/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/SparseTensor_2/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 3862
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_2/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_2"
  op: "SparseToDense"
  input: "train_input/ExpandDims_10"
  input: "train_input/SparseTensor_2/dense_shape"
  input: "train_input/ones_like_2"
  input: "train_input/SparseToDense_2/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/ExpandDims_11/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_11"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_2/ParseSingleSequenceExample:3"
  input: "train_input/ExpandDims_11/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_12/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_12"
  op: "ExpandDims"
  input: "train_input/concat_5"
  input: "train_input/ExpandDims_12/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_13/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_13"
  op: "ExpandDims"
  input: "train_input/SparseToDense_2"
  input: "train_input/ExpandDims_13/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_14/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_14"
  op: "ExpandDims"
  input: "train_input/Minimum_8"
  input: "train_input/ExpandDims_14/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2_3"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadV2_3"
  op: "ReaderReadV2"
  input: "train_input/TFRecordReaderV2_3"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/context_sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/context_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "video_id"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/feature_list_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "audio_embedding"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/debug_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample"
  op: "ParseSingleSequenceExample"
  input: "train_input/ReaderReadV2_3:1"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/context_sparse_keys_0"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/context_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/feature_list_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_3/Const"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample/debug_name"
  attr {
    key: "Ncontext_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Ncontext_sparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "Tcontext_dense"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "context_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "context_sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "feature_list_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "feature_list_dense_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "feature_list_sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_3"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample:4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_6"
  op: "Cast"
  input: "train_input/DecodeRaw_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_3/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_3"
  op: "Reshape"
  input: "train_input/Cast_6"
  input: "train_input/Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_6"
  op: "Shape"
  input: "train_input/Reshape_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_3"
  op: "StridedSlice"
  input: "train_input/Shape_6"
  input: "train_input/strided_slice_3/stack"
  input: "train_input/strided_slice_3/stack_1"
  input: "train_input/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_9/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_9"
  op: "Minimum"
  input: "train_input/strided_slice_3"
  input: "train_input/Minimum_9/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_3"
  op: "Mul"
  input: "train_input/Reshape_3"
  input: "train_input/mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_3/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_3"
  op: "Add"
  input: "train_input/mul_3"
  input: "train_input/add_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_7"
  op: "Shape"
  input: "train_input/add_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_3"
  op: "Unpack"
  input: "train_input/Shape_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_3/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_3"
  op: "Sub"
  input: "train_input/sub_3/x"
  input: "train_input/unstack_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_3/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_3"
  op: "Maximum"
  input: "train_input/Maximum_3/x"
  input: "train_input/sub_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_10/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_10"
  op: "Minimum"
  input: "train_input/unstack_3"
  input: "train_input/Minimum_10/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_6"
  op: "Pack"
  input: "train_input/Minimum_10"
  input: "train_input/unstack_3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_3"
  op: "Slice"
  input: "train_input/add_3"
  input: "train_input/zeros_like_3"
  input: "train_input/stack_6"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_7"
  op: "Pack"
  input: "train_input/Maximum_3"
  input: "train_input/unstack_3:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_7/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_7"
  op: "Cast"
  input: "train_input/Cast_7/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_3"
  op: "Fill"
  input: "train_input/stack_7"
  input: "train_input/Cast_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_6/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_6"
  op: "ConcatV2"
  input: "train_input/Slice_3"
  input: "train_input/Fill_3"
  input: "train_input/concat_6/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_11/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_11"
  op: "Minimum"
  input: "train_input/Minimum_9"
  input: "train_input/Minimum_11/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/concat_7/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/concat_7"
  op: "Identity"
  input: "train_input/concat_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_15/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_15"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample:1"
  input: "train_input/ExpandDims_15/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ones_like_3/Shape"
  op: "Shape"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/ones_like_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/ones_like_3"
  op: "Fill"
  input: "train_input/ones_like_3/Shape"
  input: "train_input/ones_like_3/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/SparseTensor_3/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 3862
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_3/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_3"
  op: "SparseToDense"
  input: "train_input/ExpandDims_15"
  input: "train_input/SparseTensor_3/dense_shape"
  input: "train_input/ones_like_3"
  input: "train_input/SparseToDense_3/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/ExpandDims_16/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_16"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_3/ParseSingleSequenceExample:3"
  input: "train_input/ExpandDims_16/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_17/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_17"
  op: "ExpandDims"
  input: "train_input/concat_7"
  input: "train_input/ExpandDims_17/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_18/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_18"
  op: "ExpandDims"
  input: "train_input/SparseToDense_3"
  input: "train_input/ExpandDims_18/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_19/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_19"
  op: "ExpandDims"
  input: "train_input/Minimum_11"
  input: "train_input/ExpandDims_19/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2_4"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadV2_4"
  op: "ReaderReadV2"
  input: "train_input/TFRecordReaderV2_4"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/context_sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/context_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "video_id"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/feature_list_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "audio_embedding"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/debug_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample"
  op: "ParseSingleSequenceExample"
  input: "train_input/ReaderReadV2_4:1"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/context_sparse_keys_0"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/context_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/feature_list_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_4/Const"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample/debug_name"
  attr {
    key: "Ncontext_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Ncontext_sparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "Tcontext_dense"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "context_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "context_sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "feature_list_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "feature_list_dense_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "feature_list_sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_4"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample:4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_8"
  op: "Cast"
  input: "train_input/DecodeRaw_4"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_4/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_4"
  op: "Reshape"
  input: "train_input/Cast_8"
  input: "train_input/Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_8"
  op: "Shape"
  input: "train_input/Reshape_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_4"
  op: "StridedSlice"
  input: "train_input/Shape_8"
  input: "train_input/strided_slice_4/stack"
  input: "train_input/strided_slice_4/stack_1"
  input: "train_input/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_12/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_12"
  op: "Minimum"
  input: "train_input/strided_slice_4"
  input: "train_input/Minimum_12/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_4/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_4"
  op: "Mul"
  input: "train_input/Reshape_4"
  input: "train_input/mul_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_4/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_4"
  op: "Add"
  input: "train_input/mul_4"
  input: "train_input/add_4/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_9"
  op: "Shape"
  input: "train_input/add_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_4"
  op: "Unpack"
  input: "train_input/Shape_9"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_4/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_4"
  op: "Sub"
  input: "train_input/sub_4/x"
  input: "train_input/unstack_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_4/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_4"
  op: "Maximum"
  input: "train_input/Maximum_4/x"
  input: "train_input/sub_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_13/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_13"
  op: "Minimum"
  input: "train_input/unstack_4"
  input: "train_input/Minimum_13/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_8"
  op: "Pack"
  input: "train_input/Minimum_13"
  input: "train_input/unstack_4:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_4"
  op: "Slice"
  input: "train_input/add_4"
  input: "train_input/zeros_like_4"
  input: "train_input/stack_8"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_9"
  op: "Pack"
  input: "train_input/Maximum_4"
  input: "train_input/unstack_4:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_9/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_9"
  op: "Cast"
  input: "train_input/Cast_9/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_4"
  op: "Fill"
  input: "train_input/stack_9"
  input: "train_input/Cast_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_8/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_8"
  op: "ConcatV2"
  input: "train_input/Slice_4"
  input: "train_input/Fill_4"
  input: "train_input/concat_8/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_14/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_14"
  op: "Minimum"
  input: "train_input/Minimum_12"
  input: "train_input/Minimum_14/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/concat_9/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/concat_9"
  op: "Identity"
  input: "train_input/concat_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_20/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_20"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample:1"
  input: "train_input/ExpandDims_20/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ones_like_4/Shape"
  op: "Shape"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/ones_like_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/ones_like_4"
  op: "Fill"
  input: "train_input/ones_like_4/Shape"
  input: "train_input/ones_like_4/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/SparseTensor_4/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 3862
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_4/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_4"
  op: "SparseToDense"
  input: "train_input/ExpandDims_20"
  input: "train_input/SparseTensor_4/dense_shape"
  input: "train_input/ones_like_4"
  input: "train_input/SparseToDense_4/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/ExpandDims_21/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_21"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_4/ParseSingleSequenceExample:3"
  input: "train_input/ExpandDims_21/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_22/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_22"
  op: "ExpandDims"
  input: "train_input/concat_9"
  input: "train_input/ExpandDims_22/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_23/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_23"
  op: "ExpandDims"
  input: "train_input/SparseToDense_4"
  input: "train_input/ExpandDims_23/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_24/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_24"
  op: "ExpandDims"
  input: "train_input/Minimum_14"
  input: "train_input/ExpandDims_24/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2_5"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadV2_5"
  op: "ReaderReadV2"
  input: "train_input/TFRecordReaderV2_5"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/context_sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/context_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "video_id"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/feature_list_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "audio_embedding"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/debug_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample"
  op: "ParseSingleSequenceExample"
  input: "train_input/ReaderReadV2_5:1"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/context_sparse_keys_0"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/context_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/feature_list_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_5/Const"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample/debug_name"
  attr {
    key: "Ncontext_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Ncontext_sparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "Tcontext_dense"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "context_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "context_sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "feature_list_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "feature_list_dense_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "feature_list_sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_5"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample:4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_10"
  op: "Cast"
  input: "train_input/DecodeRaw_5"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_5/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_5"
  op: "Reshape"
  input: "train_input/Cast_10"
  input: "train_input/Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_10"
  op: "Shape"
  input: "train_input/Reshape_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_5"
  op: "StridedSlice"
  input: "train_input/Shape_10"
  input: "train_input/strided_slice_5/stack"
  input: "train_input/strided_slice_5/stack_1"
  input: "train_input/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_15/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_15"
  op: "Minimum"
  input: "train_input/strided_slice_5"
  input: "train_input/Minimum_15/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_5/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_5"
  op: "Mul"
  input: "train_input/Reshape_5"
  input: "train_input/mul_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_5/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_5"
  op: "Add"
  input: "train_input/mul_5"
  input: "train_input/add_5/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_11"
  op: "Shape"
  input: "train_input/add_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_5"
  op: "Unpack"
  input: "train_input/Shape_11"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_5/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_5"
  op: "Sub"
  input: "train_input/sub_5/x"
  input: "train_input/unstack_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_5/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_5"
  op: "Maximum"
  input: "train_input/Maximum_5/x"
  input: "train_input/sub_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_16/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_16"
  op: "Minimum"
  input: "train_input/unstack_5"
  input: "train_input/Minimum_16/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_10"
  op: "Pack"
  input: "train_input/Minimum_16"
  input: "train_input/unstack_5:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_5"
  op: "Slice"
  input: "train_input/add_5"
  input: "train_input/zeros_like_5"
  input: "train_input/stack_10"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_11"
  op: "Pack"
  input: "train_input/Maximum_5"
  input: "train_input/unstack_5:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_11/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_11"
  op: "Cast"
  input: "train_input/Cast_11/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_5"
  op: "Fill"
  input: "train_input/stack_11"
  input: "train_input/Cast_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_10/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_10"
  op: "ConcatV2"
  input: "train_input/Slice_5"
  input: "train_input/Fill_5"
  input: "train_input/concat_10/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_17/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_17"
  op: "Minimum"
  input: "train_input/Minimum_15"
  input: "train_input/Minimum_17/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/concat_11/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/concat_11"
  op: "Identity"
  input: "train_input/concat_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_25/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_25"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample:1"
  input: "train_input/ExpandDims_25/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ones_like_5/Shape"
  op: "Shape"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/ones_like_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/ones_like_5"
  op: "Fill"
  input: "train_input/ones_like_5/Shape"
  input: "train_input/ones_like_5/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/SparseTensor_5/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 3862
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_5/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_5"
  op: "SparseToDense"
  input: "train_input/ExpandDims_25"
  input: "train_input/SparseTensor_5/dense_shape"
  input: "train_input/ones_like_5"
  input: "train_input/SparseToDense_5/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/ExpandDims_26/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_26"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_5/ParseSingleSequenceExample:3"
  input: "train_input/ExpandDims_26/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_27/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_27"
  op: "ExpandDims"
  input: "train_input/concat_11"
  input: "train_input/ExpandDims_27/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_28/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_28"
  op: "ExpandDims"
  input: "train_input/SparseToDense_5"
  input: "train_input/ExpandDims_28/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_29/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_29"
  op: "ExpandDims"
  input: "train_input/Minimum_17"
  input: "train_input/ExpandDims_29/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2_6"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadV2_6"
  op: "ReaderReadV2"
  input: "train_input/TFRecordReaderV2_6"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/context_sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/context_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "video_id"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/feature_list_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "audio_embedding"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/debug_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample"
  op: "ParseSingleSequenceExample"
  input: "train_input/ReaderReadV2_6:1"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/context_sparse_keys_0"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/context_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/feature_list_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_6/Const"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample/debug_name"
  attr {
    key: "Ncontext_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Ncontext_sparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "Tcontext_dense"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "context_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "context_sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "feature_list_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "feature_list_dense_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "feature_list_sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_6"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample:4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_12"
  op: "Cast"
  input: "train_input/DecodeRaw_6"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_6/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_6"
  op: "Reshape"
  input: "train_input/Cast_12"
  input: "train_input/Reshape_6/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_12"
  op: "Shape"
  input: "train_input/Reshape_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_6"
  op: "StridedSlice"
  input: "train_input/Shape_12"
  input: "train_input/strided_slice_6/stack"
  input: "train_input/strided_slice_6/stack_1"
  input: "train_input/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_18/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_18"
  op: "Minimum"
  input: "train_input/strided_slice_6"
  input: "train_input/Minimum_18/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_6/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_6"
  op: "Mul"
  input: "train_input/Reshape_6"
  input: "train_input/mul_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_6/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_6"
  op: "Add"
  input: "train_input/mul_6"
  input: "train_input/add_6/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_13"
  op: "Shape"
  input: "train_input/add_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_6"
  op: "Unpack"
  input: "train_input/Shape_13"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_6/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_6"
  op: "Sub"
  input: "train_input/sub_6/x"
  input: "train_input/unstack_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_6/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_6"
  op: "Maximum"
  input: "train_input/Maximum_6/x"
  input: "train_input/sub_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_19/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_19"
  op: "Minimum"
  input: "train_input/unstack_6"
  input: "train_input/Minimum_19/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_12"
  op: "Pack"
  input: "train_input/Minimum_19"
  input: "train_input/unstack_6:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_6"
  op: "Slice"
  input: "train_input/add_6"
  input: "train_input/zeros_like_6"
  input: "train_input/stack_12"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_13"
  op: "Pack"
  input: "train_input/Maximum_6"
  input: "train_input/unstack_6:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_13/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_13"
  op: "Cast"
  input: "train_input/Cast_13/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_6"
  op: "Fill"
  input: "train_input/stack_13"
  input: "train_input/Cast_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_12/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_12"
  op: "ConcatV2"
  input: "train_input/Slice_6"
  input: "train_input/Fill_6"
  input: "train_input/concat_12/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_20/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_20"
  op: "Minimum"
  input: "train_input/Minimum_18"
  input: "train_input/Minimum_20/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/concat_13/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/concat_13"
  op: "Identity"
  input: "train_input/concat_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_30/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_30"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample:1"
  input: "train_input/ExpandDims_30/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ones_like_6/Shape"
  op: "Shape"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/ones_like_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/ones_like_6"
  op: "Fill"
  input: "train_input/ones_like_6/Shape"
  input: "train_input/ones_like_6/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/SparseTensor_6/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 3862
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_6/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_6"
  op: "SparseToDense"
  input: "train_input/ExpandDims_30"
  input: "train_input/SparseTensor_6/dense_shape"
  input: "train_input/ones_like_6"
  input: "train_input/SparseToDense_6/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/ExpandDims_31/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_31"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_6/ParseSingleSequenceExample:3"
  input: "train_input/ExpandDims_31/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_32/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_32"
  op: "ExpandDims"
  input: "train_input/concat_13"
  input: "train_input/ExpandDims_32/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_33/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_33"
  op: "ExpandDims"
  input: "train_input/SparseToDense_6"
  input: "train_input/ExpandDims_33/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_34/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_34"
  op: "ExpandDims"
  input: "train_input/Minimum_20"
  input: "train_input/ExpandDims_34/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/TFRecordReaderV2_7"
  op: "TFRecordReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "compression_type"
    value {
      s: ""
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/ReaderReadV2_7"
  op: "ReaderReadV2"
  input: "train_input/TFRecordReaderV2_7"
  input: "train_input/input_producer"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/context_sparse_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "labels"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/context_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "video_id"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/feature_list_dense_keys_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "audio_embedding"
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/debug_name"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample"
  op: "ParseSingleSequenceExample"
  input: "train_input/ReaderReadV2_7:1"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/feature_list_dense_missing_assumed_empty"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/context_sparse_keys_0"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/context_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/feature_list_dense_keys_0"
  input: "train_input/ParseSingleSequenceExample_7/Const"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample/debug_name"
  attr {
    key: "Ncontext_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Ncontext_sparse"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_dense"
    value {
      i: 1
    }
  }
  attr {
    key: "Nfeature_list_sparse"
    value {
      i: 0
    }
  }
  attr {
    key: "Tcontext_dense"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "context_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "context_sparse_types"
    value {
      list {
        type: DT_INT64
      }
    }
  }
  attr {
    key: "feature_list_dense_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "feature_list_dense_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "feature_list_sparse_types"
    value {
      list {
      }
    }
  }
}
node {
  name: "train_input/DecodeRaw_7"
  op: "DecodeRaw"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample:4"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "little_endian"
    value {
      b: true
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_UINT8
    }
  }
}
node {
  name: "train_input/Cast_14"
  op: "Cast"
  input: "train_input/DecodeRaw_7"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Reshape_7/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "train_input/Reshape_7"
  op: "Reshape"
  input: "train_input/Cast_14"
  input: "train_input/Reshape_7/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_14"
  op: "Shape"
  input: "train_input/Reshape_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/strided_slice_7"
  op: "StridedSlice"
  input: "train_input/Shape_14"
  input: "train_input/strided_slice_7/stack"
  input: "train_input/strided_slice_7/stack_1"
  input: "train_input/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "train_input/Minimum_21/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_21"
  op: "Minimum"
  input: "train_input/strided_slice_7"
  input: "train_input/Minimum_21/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/mul_7/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.01568627543747425
      }
    }
  }
}
node {
  name: "train_input/mul_7"
  op: "Mul"
  input: "train_input/Reshape_7"
  input: "train_input/mul_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/add_7/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.9921875
      }
    }
  }
}
node {
  name: "train_input/add_7"
  op: "Add"
  input: "train_input/mul_7"
  input: "train_input/add_7/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Shape_15"
  op: "Shape"
  input: "train_input/add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/unstack_7"
  op: "Unpack"
  input: "train_input/Shape_15"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
  attr {
    key: "num"
    value {
      i: 2
    }
  }
}
node {
  name: "train_input/sub_7/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/sub_7"
  op: "Sub"
  input: "train_input/sub_7/x"
  input: "train_input/unstack_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Maximum_7/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Maximum_7"
  op: "Maximum"
  input: "train_input/Maximum_7/x"
  input: "train_input/sub_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_22/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_22"
  op: "Minimum"
  input: "train_input/unstack_7"
  input: "train_input/Minimum_22/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/stack_14"
  op: "Pack"
  input: "train_input/Minimum_22"
  input: "train_input/unstack_7:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/zeros_like_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Slice_7"
  op: "Slice"
  input: "train_input/add_7"
  input: "train_input/zeros_like_7"
  input: "train_input/stack_14"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/stack_15"
  op: "Pack"
  input: "train_input/Maximum_7"
  input: "train_input/unstack_7:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input/Cast_15/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/Cast_15"
  op: "Cast"
  input: "train_input/Cast_15/x"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/Fill_7"
  op: "Fill"
  input: "train_input/stack_15"
  input: "train_input/Cast_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/concat_14/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/concat_14"
  op: "ConcatV2"
  input: "train_input/Slice_7"
  input: "train_input/Fill_7"
  input: "train_input/concat_14/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/Minimum_23/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 300
      }
    }
  }
}
node {
  name: "train_input/Minimum_23"
  op: "Minimum"
  input: "train_input/Minimum_21"
  input: "train_input/Minimum_23/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/concat_15/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input/concat_15"
  op: "Identity"
  input: "train_input/concat_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_35/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_35"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample:1"
  input: "train_input/ExpandDims_35/dim"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ones_like_7/Shape"
  op: "Shape"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample:1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/ones_like_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/ones_like_7"
  op: "Fill"
  input: "train_input/ones_like_7/Shape"
  input: "train_input/ones_like_7/Const"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input/SparseTensor_7/dense_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 1
          }
        }
        int64_val: 3862
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_7/default_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: false
      }
    }
  }
}
node {
  name: "train_input/SparseToDense_7"
  op: "SparseToDense"
  input: "train_input/ExpandDims_35"
  input: "train_input/SparseTensor_7/dense_shape"
  input: "train_input/ones_like_7"
  input: "train_input/SparseToDense_7/default_value"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/ExpandDims_36/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_36"
  op: "ExpandDims"
  input: "train_input/ParseSingleSequenceExample_7/ParseSingleSequenceExample:3"
  input: "train_input/ExpandDims_36/dim"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_37/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_37"
  op: "ExpandDims"
  input: "train_input/concat_15"
  input: "train_input/ExpandDims_37/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_38/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_38"
  op: "ExpandDims"
  input: "train_input/SparseToDense_7"
  input: "train_input/ExpandDims_38/dim"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_39/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/ExpandDims_39"
  op: "ExpandDims"
  input: "train_input/Minimum_23"
  input: "train_input/ExpandDims_39/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_BOOL
        tensor_shape {
        }
        bool_val: true
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue"
  op: "RandomShuffleQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5120
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 1024
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ExpandDims_3"
  input: "train_input/ExpandDims_4"
  input: "train_input/ExpandDims_1"
  input: "train_input/ExpandDims_2"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany_1"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ExpandDims_8"
  input: "train_input/ExpandDims_9"
  input: "train_input/ExpandDims_6"
  input: "train_input/ExpandDims_7"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany_2"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ExpandDims_13"
  input: "train_input/ExpandDims_14"
  input: "train_input/ExpandDims_11"
  input: "train_input/ExpandDims_12"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany_3"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ExpandDims_18"
  input: "train_input/ExpandDims_19"
  input: "train_input/ExpandDims_16"
  input: "train_input/ExpandDims_17"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany_4"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ExpandDims_23"
  input: "train_input/ExpandDims_24"
  input: "train_input/ExpandDims_21"
  input: "train_input/ExpandDims_22"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany_5"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ExpandDims_28"
  input: "train_input/ExpandDims_29"
  input: "train_input/ExpandDims_26"
  input: "train_input/ExpandDims_27"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany_6"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ExpandDims_33"
  input: "train_input/ExpandDims_34"
  input: "train_input/ExpandDims_31"
  input: "train_input/ExpandDims_32"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_EnqueueMany_7"
  op: "QueueEnqueueManyV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/ExpandDims_38"
  input: "train_input/ExpandDims_39"
  input: "train_input/ExpandDims_36"
  input: "train_input/ExpandDims_37"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_Close"
  op: "QueueCloseV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/random_shuffle_queue_Size"
  op: "QueueSizeV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/sub"
  op: "Sub"
  input: "train_input/shuffle_batch_join/random_shuffle_queue_Size"
  input: "train_input/shuffle_batch_join/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/Maximum/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/Maximum"
  op: "Maximum"
  input: "train_input/shuffle_batch_join/Maximum/x"
  input: "train_input/shuffle_batch_join/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/Cast"
  op: "Cast"
  input: "train_input/shuffle_batch_join/Maximum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.000244140625
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/mul"
  op: "Mul"
  input: "train_input/shuffle_batch_join/Cast"
  input: "train_input/shuffle_batch_join/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/fraction_over_1024_of_4096_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input/shuffle_batch_join/fraction_over_1024_of_4096_full"
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/fraction_over_1024_of_4096_full"
  op: "ScalarSummary"
  input: "train_input/shuffle_batch_join/fraction_over_1024_of_4096_full/tags"
  input: "train_input/shuffle_batch_join/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1024
      }
    }
  }
}
node {
  name: "train_input/shuffle_batch_join"
  op: "QueueDequeueUpToV2"
  input: "train_input/shuffle_batch_join/random_shuffle_queue"
  input: "train_input/shuffle_batch_join/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_BOOL
        type: DT_INT32
        type: DT_STRING
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "model/input_raw/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/input_raw"
      }
    }
  }
}
node {
  name: "model/input_raw"
  op: "HistogramSummary"
  input: "model/input_raw/tag"
  input: "train_input/shuffle_batch_join:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "l2_normalize/Square"
  op: "Square"
  input: "train_input/shuffle_batch_join:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize/Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "l2_normalize/Sum"
  op: "Sum"
  input: "l2_normalize/Square"
  input: "l2_normalize/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "l2_normalize/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999960041972e-13
      }
    }
  }
}
node {
  name: "l2_normalize/Maximum"
  op: "Maximum"
  input: "l2_normalize/Sum"
  input: "l2_normalize/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize/Rsqrt"
  op: "Rsqrt"
  input: "l2_normalize/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "l2_normalize"
  op: "Mul"
  input: "train_input/shuffle_batch_join:3"
  input: "l2_normalize/Rsqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "split/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split"
  op: "Split"
  input: "split/split_dim"
  input: "l2_normalize"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 300
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 1
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "split_1/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split_1"
  op: "Split"
  input: "split_1/split_dim"
  input: "train_input/shuffle_batch_join"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 1
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "split_2/split_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "split_2"
  op: "Split"
  input: "split_2/split_dim"
  input: "train_input/shuffle_batch_join:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 1
    }
  }
}
node {
  name: "tower/ExpandDims/dim"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower/ExpandDims"
  op: "ExpandDims"
  input: "split_2"
  input: "tower/ExpandDims/dim"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "tower/Cast"
  op: "Cast"
  input: "tower/ExpandDims"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "tower/Tile/multiples"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\200\000\000\000"
      }
    }
  }
}
node {
  name: "tower/Tile"
  op: "Tile"
  input: "tower/Cast"
  input: "tower/Tile/multiples"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "tower/Reshape/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\200\000\000\000"
      }
    }
  }
}
node {
  name: "tower/Reshape"
  op: "Reshape"
  input: "tower/Tile"
  input: "tower/Reshape/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "tower/Sum/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower/Sum"
  op: "Sum"
  input: "split"
  input: "tower/Sum/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/truediv"
  op: "RealDiv"
  input: "tower/Sum"
  input: "tower/Reshape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\026\017\000\000"
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.038778334856033325
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.038778334856033325
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "tower/fully_connected/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "tower/fully_connected/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "tower/fully_connected/weights/Initializer/random_uniform/max"
  input: "tower/fully_connected/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "tower/fully_connected/weights/Initializer/random_uniform/RandomUniform"
  input: "tower/fully_connected/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Initializer/random_uniform"
  op: "Add"
  input: "tower/fully_connected/weights/Initializer/random_uniform/mul"
  input: "tower/fully_connected/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3862
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "tower/fully_connected/weights/Assign"
  op: "Assign"
  input: "tower/fully_connected/weights"
  input: "tower/fully_connected/weights/Initializer/random_uniform"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "tower/fully_connected/weights/read"
  op: "Identity"
  input: "tower/fully_connected/weights"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/kernel/Regularizer/l2_regularizer/scale"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "tower/fully_connected/kernel/Regularizer/l2_regularizer/L2Loss"
  op: "L2Loss"
  input: "tower/fully_connected/weights/read"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/kernel/Regularizer/l2_regularizer"
  op: "Mul"
  input: "tower/fully_connected/kernel/Regularizer/l2_regularizer/scale"
  input: "tower/fully_connected/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Initializer/zeros/shape_as_tensor"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3862
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Initializer/zeros/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Initializer/zeros"
  op: "Fill"
  input: "tower/fully_connected/biases/Initializer/zeros/shape_as_tensor"
  input: "tower/fully_connected/biases/Initializer/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/fully_connected/biases"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3862
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "tower/fully_connected/biases/Assign"
  op: "Assign"
  input: "tower/fully_connected/biases"
  input: "tower/fully_connected/biases/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "tower/fully_connected/biases/read"
  op: "Identity"
  input: "tower/fully_connected/biases"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/MatMul"
  op: "MatMul"
  input: "tower/truediv"
  input: "tower/fully_connected/weights/read"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "tower/fully_connected/BiasAdd"
  op: "BiasAdd"
  input: "tower/fully_connected/MatMul"
  input: "tower/fully_connected/biases/read"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower/fully_connected/Sigmoid"
  op: "Sigmoid"
  input: "tower/fully_connected/BiasAdd"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/tower/fully_connected/weights/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "tower/tower/fully_connected/weights"
      }
    }
  }
}
node {
  name: "tower/tower/fully_connected/weights"
  op: "HistogramSummary"
  input: "tower/tower/fully_connected/weights/tag"
  input: "tower/fully_connected/weights/read"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/tower/fully_connected/biases/tag"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "tower/tower/fully_connected/biases"
      }
    }
  }
}
node {
  name: "tower/tower/fully_connected/biases"
  op: "HistogramSummary"
  input: "tower/tower/fully_connected/biases/tag"
  input: "tower/fully_connected/biases/read"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/Cast"
  op: "Cast"
  input: "split_1"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/add/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "tower/loss_xent/add"
  op: "Add"
  input: "tower/fully_connected/Sigmoid"
  input: "tower/loss_xent/add/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/Log"
  op: "Log"
  input: "tower/loss_xent/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/mul"
  op: "Mul"
  input: "tower/loss_xent/Cast"
  input: "tower/loss_xent/Log"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/sub/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower/loss_xent/sub"
  op: "Sub"
  input: "tower/loss_xent/sub/x"
  input: "tower/loss_xent/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/sub_1/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower/loss_xent/sub_1"
  op: "Sub"
  input: "tower/loss_xent/sub_1/x"
  input: "tower/fully_connected/Sigmoid"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/add_1/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-06
      }
    }
  }
}
node {
  name: "tower/loss_xent/add_1"
  op: "Add"
  input: "tower/loss_xent/sub_1"
  input: "tower/loss_xent/add_1/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/Log_1"
  op: "Log"
  input: "tower/loss_xent/add_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/mul_1"
  op: "Mul"
  input: "tower/loss_xent/sub"
  input: "tower/loss_xent/Log_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/add_2"
  op: "Add"
  input: "tower/loss_xent/mul"
  input: "tower/loss_xent/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/Neg"
  op: "Neg"
  input: "tower/loss_xent/add_2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/loss_xent/Sum/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower/loss_xent/Sum"
  op: "Sum"
  input: "tower/loss_xent/Neg"
  input: "tower/loss_xent/Sum/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/loss_xent/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "tower/loss_xent/Mean"
  op: "Mean"
  input: "tower/loss_xent/Sum"
  input: "tower/loss_xent/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower/add"
  op: "Add"
  input: "tower/Const"
  input: "tower/fully_connected/kernel/Regularizer/l2_regularizer"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/mul/x"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower/mul"
  op: "Mul"
  input: "tower/mul/x"
  input: "tower/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/add_1"
  op: "Add"
  input: "tower/mul"
  input: "tower/loss_xent/Mean"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/grad_ys_0"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "tower/gradients/Fill"
  op: "Fill"
  input: "tower/gradients/Shape"
  input: "tower/gradients/grad_ys_0"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/Fill"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/Fill"
  input: "^tower/gradients/tower/add_1_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/Fill"
  input: "^tower/gradients/tower/add_1_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/Fill"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/mul_grad/Mul"
  op: "Mul"
  input: "tower/gradients/tower/add_1_grad/tuple/control_dependency"
  input: "tower/add"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/mul_grad/Mul_1"
  op: "Mul"
  input: "tower/gradients/tower/add_1_grad/tuple/control_dependency"
  input: "tower/mul/x"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/mul_grad/Mul"
  input: "^tower/gradients/tower/mul_grad/Mul_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/mul_grad/Mul"
  input: "^tower/gradients/tower/mul_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/mul_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/mul_grad/Mul_1"
  input: "^tower/gradients/tower/mul_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Reshape/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Reshape"
  op: "Reshape"
  input: "tower/gradients/tower/add_1_grad/tuple/control_dependency_1"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Reshape/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Shape"
  op: "Shape"
  input: "tower/loss_xent/Sum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Tile"
  op: "Tile"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Reshape"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Shape_1"
  op: "Shape"
  input: "tower/loss_xent/Sum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Prod"
  op: "Prod"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Shape_1"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Const_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Prod_1"
  op: "Prod"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Shape_2"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Const_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Maximum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Maximum"
  op: "Maximum"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Prod_1"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Maximum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/floordiv"
  op: "FloorDiv"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Prod"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/Cast"
  op: "Cast"
  input: "tower/gradients/tower/loss_xent/Mean_grad/floordiv"
  device: "/device:CPU:0"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Mean_grad/truediv"
  op: "RealDiv"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Tile"
  input: "tower/gradients/tower/loss_xent/Mean_grad/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/mul_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/mul_grad/tuple/control_dependency_1"
  input: "^tower/gradients/tower/add_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/mul_grad/tuple/control_dependency_1"
  input: "^tower/gradients/tower/add_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/mul_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Shape"
  op: "Shape"
  input: "tower/loss_xent/Neg"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Size"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/add"
  op: "Add"
  input: "tower/loss_xent/Sum/reduction_indices"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/mod"
  op: "FloorMod"
  input: "tower/gradients/tower/loss_xent/Sum_grad/add"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Size"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/range/start"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/range/delta"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/range"
  op: "Range"
  input: "tower/gradients/tower/loss_xent/Sum_grad/range/start"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Size"
  input: "tower/gradients/tower/loss_xent/Sum_grad/range/delta"
  device: "/device:CPU:0"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Fill/value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Fill"
  op: "Fill"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Shape_1"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Fill/value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "tower/gradients/tower/loss_xent/Sum_grad/range"
  input: "tower/gradients/tower/loss_xent/Sum_grad/mod"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Shape"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Fill"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Maximum/y"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Maximum"
  op: "Maximum"
  input: "tower/gradients/tower/loss_xent/Sum_grad/DynamicStitch"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Maximum/y"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/floordiv"
  op: "FloorDiv"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Shape"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Maximum"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/Sum_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Reshape"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/Mean_grad/truediv"
  input: "tower/gradients/tower/loss_xent/Sum_grad/DynamicStitch"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Sum_grad/Tile"
  op: "Tile"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Reshape"
  input: "tower/gradients/tower/loss_xent/Sum_grad/floordiv"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/Mul"
  op: "Mul"
  input: "tower/gradients/tower/add_grad/tuple/control_dependency_1"
  input: "tower/fully_connected/kernel/Regularizer/l2_regularizer/L2Loss"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  op: "Mul"
  input: "tower/gradients/tower/add_grad/tuple/control_dependency_1"
  input: "tower/fully_connected/kernel/Regularizer/l2_regularizer/scale"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/Mul"
  input: "^tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/Mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/Mul_1"
  input: "^tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/Mul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Neg_grad/Neg"
  op: "Neg"
  input: "tower/gradients/tower/loss_xent/Sum_grad/Tile"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  op: "Mul"
  input: "tower/fully_connected/weights/read"
  input: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/Shape"
  op: "Shape"
  input: "tower/loss_xent/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/Shape_1"
  op: "Shape"
  input: "tower/loss_xent/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower/gradients/tower/loss_xent/add_2_grad/Shape"
  input: "tower/gradients/tower/loss_xent/add_2_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/Sum"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/Neg_grad/Neg"
  input: "tower/gradients/tower/loss_xent/add_2_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/Reshape"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/add_2_grad/Sum"
  input: "tower/gradients/tower/loss_xent/add_2_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/Sum_1"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/Neg_grad/Neg"
  input: "tower/gradients/tower/loss_xent/add_2_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/add_2_grad/Sum_1"
  input: "tower/gradients/tower/loss_xent/add_2_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/loss_xent/add_2_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/add_2_grad/Reshape_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/add_2_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/add_2_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/add_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/add_2_grad/Reshape_1"
  input: "^tower/gradients/tower/loss_xent/add_2_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/add_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/Shape"
  op: "Shape"
  input: "tower/loss_xent/Cast"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/Shape_1"
  op: "Shape"
  input: "tower/loss_xent/Log"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower/gradients/tower/loss_xent/mul_grad/Shape"
  input: "tower/gradients/tower/loss_xent/mul_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/Mul"
  op: "Mul"
  input: "tower/gradients/tower/loss_xent/add_2_grad/tuple/control_dependency"
  input: "tower/loss_xent/Log"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/Sum"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/mul_grad/Mul"
  input: "tower/gradients/tower/loss_xent/mul_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/Reshape"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/mul_grad/Sum"
  input: "tower/gradients/tower/loss_xent/mul_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/Mul_1"
  op: "Mul"
  input: "tower/loss_xent/Cast"
  input: "tower/gradients/tower/loss_xent/add_2_grad/tuple/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/Sum_1"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/mul_grad/Mul_1"
  input: "tower/gradients/tower/loss_xent/mul_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/Reshape_1"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/mul_grad/Sum_1"
  input: "tower/gradients/tower/loss_xent/mul_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/loss_xent/mul_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/mul_grad/Reshape_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/mul_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/mul_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/mul_grad/Reshape_1"
  input: "^tower/gradients/tower/loss_xent/mul_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/Shape"
  op: "Shape"
  input: "tower/loss_xent/sub"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/Shape_1"
  op: "Shape"
  input: "tower/loss_xent/Log_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Shape"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/Mul"
  op: "Mul"
  input: "tower/gradients/tower/loss_xent/add_2_grad/tuple/control_dependency_1"
  input: "tower/loss_xent/Log_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/Sum"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Mul"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/Reshape"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Sum"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/Mul_1"
  op: "Mul"
  input: "tower/loss_xent/sub"
  input: "tower/gradients/tower/loss_xent/add_2_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/Sum_1"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Mul_1"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Sum_1"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/loss_xent/mul_1_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/mul_1_grad/Reshape_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/mul_1_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/Reshape_1"
  input: "^tower/gradients/tower/loss_xent/mul_1_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Log_grad/Reciprocal"
  op: "Reciprocal"
  input: "tower/loss_xent/add"
  input: "^tower/gradients/tower/loss_xent/mul_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Log_grad/mul"
  op: "Mul"
  input: "tower/gradients/tower/loss_xent/mul_grad/tuple/control_dependency_1"
  input: "tower/gradients/tower/loss_xent/Log_grad/Reciprocal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Log_1_grad/Reciprocal"
  op: "Reciprocal"
  input: "tower/loss_xent/add_1"
  input: "^tower/gradients/tower/loss_xent/mul_1_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/Log_1_grad/mul"
  op: "Mul"
  input: "tower/gradients/tower/loss_xent/mul_1_grad/tuple/control_dependency_1"
  input: "tower/gradients/tower/loss_xent/Log_1_grad/Reciprocal"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/Shape"
  op: "Shape"
  input: "tower/fully_connected/Sigmoid"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower/gradients/tower/loss_xent/add_grad/Shape"
  input: "tower/gradients/tower/loss_xent/add_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/Sum"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/Log_grad/mul"
  input: "tower/gradients/tower/loss_xent/add_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/Reshape"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/add_grad/Sum"
  input: "tower/gradients/tower/loss_xent/add_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/Sum_1"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/Log_grad/mul"
  input: "tower/gradients/tower/loss_xent/add_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/Reshape_1"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/add_grad/Sum_1"
  input: "tower/gradients/tower/loss_xent/add_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/loss_xent/add_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/add_grad/Reshape_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/add_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/add_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/add_grad/Reshape_1"
  input: "^tower/gradients/tower/loss_xent/add_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/Shape"
  op: "Shape"
  input: "tower/loss_xent/sub_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower/gradients/tower/loss_xent/add_1_grad/Shape"
  input: "tower/gradients/tower/loss_xent/add_1_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/Sum"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/Log_1_grad/mul"
  input: "tower/gradients/tower/loss_xent/add_1_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/Reshape"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/add_1_grad/Sum"
  input: "tower/gradients/tower/loss_xent/add_1_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/Sum_1"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/Log_1_grad/mul"
  input: "tower/gradients/tower/loss_xent/add_1_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/add_1_grad/Sum_1"
  input: "tower/gradients/tower/loss_xent/add_1_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/loss_xent/add_1_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/add_1_grad/Reshape_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/add_1_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/add_1_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/add_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/add_1_grad/Reshape_1"
  input: "^tower/gradients/tower/loss_xent/add_1_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/add_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/Shape_1"
  op: "Shape"
  input: "tower/fully_connected/Sigmoid"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Shape"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/Sum"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/add_1_grad/tuple/control_dependency"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/BroadcastGradientArgs"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/Reshape"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Sum"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/Sum_1"
  op: "Sum"
  input: "tower/gradients/tower/loss_xent/add_1_grad/tuple/control_dependency"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/BroadcastGradientArgs:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/Neg"
  op: "Neg"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Sum_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/Reshape_1"
  op: "Reshape"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Neg"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Shape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/loss_xent/sub_1_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/sub_1_grad/Reshape_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Reshape"
  input: "^tower/gradients/tower/loss_xent/sub_1_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/sub_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/loss_xent/sub_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/Reshape_1"
  input: "^tower/gradients/tower/loss_xent/sub_1_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/sub_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/AddN"
  op: "AddN"
  input: "tower/gradients/tower/loss_xent/add_grad/tuple/control_dependency"
  input: "tower/gradients/tower/loss_xent/sub_1_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/loss_xent/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "tower/fully_connected/Sigmoid"
  input: "tower/gradients/AddN"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "tower/gradients/tower/fully_connected/Sigmoid_grad/SigmoidGrad"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/fully_connected/BiasAdd_grad/BiasAddGrad"
  input: "^tower/gradients/tower/fully_connected/Sigmoid_grad/SigmoidGrad"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/fully_connected/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/fully_connected/Sigmoid_grad/SigmoidGrad"
  input: "^tower/gradients/tower/fully_connected/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/fully_connected/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/fully_connected/BiasAdd_grad/BiasAddGrad"
  input: "^tower/gradients/tower/fully_connected/BiasAdd_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/fully_connected/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/MatMul_grad/MatMul"
  op: "MatMul"
  input: "tower/gradients/tower/fully_connected/BiasAdd_grad/tuple/control_dependency"
  input: "tower/fully_connected/weights/read"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "tower/truediv"
  input: "tower/gradients/tower/fully_connected/BiasAdd_grad/tuple/control_dependency"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^tower/gradients/tower/fully_connected/MatMul_grad/MatMul"
  input: "^tower/gradients/tower/fully_connected/MatMul_grad/MatMul_1"
  device: "/device:CPU:0"
}
node {
  name: "tower/gradients/tower/fully_connected/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "tower/gradients/tower/fully_connected/MatMul_grad/MatMul"
  input: "^tower/gradients/tower/fully_connected/MatMul_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/fully_connected/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/tower/fully_connected/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "tower/gradients/tower/fully_connected/MatMul_grad/MatMul_1"
  input: "^tower/gradients/tower/fully_connected/MatMul_grad/tuple/group_deps"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/fully_connected/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/gradients/AddN_1"
  op: "AddN"
  input: "tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
  input: "tower/gradients/tower/fully_connected/MatMul_grad/tuple/control_dependency_1"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/gradients/tower/fully_connected/kernel/Regularizer/l2_regularizer/L2Loss_grad/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "stack"
  op: "Pack"
  input: "tower/loss_xent/Mean"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "stack"
  input: "Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "label_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "label_loss"
      }
    }
  }
}
node {
  name: "label_loss"
  op: "ScalarSummary"
  input: "label_loss/tags"
  input: "Mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stack_1"
  op: "Pack"
  input: "tower/add"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_1"
  op: "Mean"
  input: "stack_1"
  input: "Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "reg_loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "reg_loss"
      }
    }
  }
}
node {
  name: "reg_loss"
  op: "ScalarSummary"
  input: "reg_loss/tags"
  input: "Mean_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "stack_2"
  op: "Pack"
  input: "tower/gradients/AddN_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Sum/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Sum"
  op: "Sum"
  input: "stack_2"
  input: "Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "stack_3"
  op: "Pack"
  input: "tower/gradients/tower/fully_connected/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "Sum_1/reduction_indices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Sum_1"
  op: "Sum"
  input: "stack_3"
  input: "Sum_1/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/mul"
  op: "Mul"
  input: "Sum"
  input: "Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Sum"
  op: "Sum"
  input: "clip_grads/clip_by_norm/mul"
  input: "clip_grads/clip_by_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Greater"
  op: "Greater"
  input: "clip_grads/clip_by_norm/Sum"
  input: "clip_grads/clip_by_norm/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/ones_like/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/ones_like"
  op: "Fill"
  input: "clip_grads/clip_by_norm/ones_like/Shape"
  input: "clip_grads/clip_by_norm/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Select"
  op: "Select"
  input: "clip_grads/clip_by_norm/Greater"
  input: "clip_grads/clip_by_norm/Sum"
  input: "clip_grads/clip_by_norm/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Sqrt"
  op: "Sqrt"
  input: "clip_grads/clip_by_norm/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Select_1"
  op: "Select"
  input: "clip_grads/clip_by_norm/Greater"
  input: "clip_grads/clip_by_norm/Sqrt"
  input: "clip_grads/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/mul_1"
  op: "Mul"
  input: "Sum"
  input: "clip_grads/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/Maximum"
  op: "Maximum"
  input: "clip_grads/clip_by_norm/Select_1"
  input: "clip_grads/clip_by_norm/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm/truediv"
  op: "RealDiv"
  input: "clip_grads/clip_by_norm/mul_1"
  input: "clip_grads/clip_by_norm/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm"
  op: "Identity"
  input: "clip_grads/clip_by_norm/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/mul"
  op: "Mul"
  input: "Sum_1"
  input: "Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Sum"
  op: "Sum"
  input: "clip_grads/clip_by_norm_1/mul"
  input: "clip_grads/clip_by_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Greater"
  op: "Greater"
  input: "clip_grads/clip_by_norm_1/Sum"
  input: "clip_grads/clip_by_norm_1/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/ones_like/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/ones_like/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/ones_like"
  op: "Fill"
  input: "clip_grads/clip_by_norm_1/ones_like/Shape"
  input: "clip_grads/clip_by_norm_1/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Select"
  op: "Select"
  input: "clip_grads/clip_by_norm_1/Greater"
  input: "clip_grads/clip_by_norm_1/Sum"
  input: "clip_grads/clip_by_norm_1/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Sqrt"
  op: "Sqrt"
  input: "clip_grads/clip_by_norm_1/Select"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Select_1"
  op: "Select"
  input: "clip_grads/clip_by_norm_1/Greater"
  input: "clip_grads/clip_by_norm_1/Sqrt"
  input: "clip_grads/clip_by_norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/mul_1"
  op: "Mul"
  input: "Sum_1"
  input: "clip_grads/clip_by_norm_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Maximum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/Maximum"
  op: "Maximum"
  input: "clip_grads/clip_by_norm_1/Select_1"
  input: "clip_grads/clip_by_norm_1/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1/truediv"
  op: "RealDiv"
  input: "clip_grads/clip_by_norm_1/mul_1"
  input: "clip_grads/clip_by_norm_1/Maximum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "clip_grads/clip_by_norm_1"
  op: "Identity"
  input: "clip_grads/clip_by_norm_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "beta1_power/initial_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "beta1_power"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta1_power/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "beta1_power/initial_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta1_power/read"
  op: "Identity"
  input: "beta1_power"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "beta2_power/initial_value"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "beta2_power"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "beta2_power/Assign"
  op: "Assign"
  input: "beta2_power"
  input: "beta2_power/initial_value"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "beta2_power/read"
  op: "Identity"
  input: "beta2_power"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\026\017\000\000"
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam/Initializer/zeros"
  op: "Fill"
  input: "tower/fully_connected/weights/Adam/Initializer/zeros/shape_as_tensor"
  input: "tower/fully_connected/weights/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3862
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam/Assign"
  op: "Assign"
  input: "tower/fully_connected/weights/Adam"
  input: "tower/fully_connected/weights/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam/read"
  op: "Identity"
  input: "tower/fully_connected/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\200\000\000\000\026\017\000\000"
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "tower/fully_connected/weights/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "tower/fully_connected/weights/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 128
        }
        dim {
          size: 3862
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam_1/Assign"
  op: "Assign"
  input: "tower/fully_connected/weights/Adam_1"
  input: "tower/fully_connected/weights/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "tower/fully_connected/weights/Adam_1/read"
  op: "Identity"
  input: "tower/fully_connected/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3862
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam/Initializer/zeros"
  op: "Fill"
  input: "tower/fully_connected/biases/Adam/Initializer/zeros/shape_as_tensor"
  input: "tower/fully_connected/biases/Adam/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3862
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam/Assign"
  op: "Assign"
  input: "tower/fully_connected/biases/Adam"
  input: "tower/fully_connected/biases/Adam/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam/read"
  op: "Identity"
  input: "tower/fully_connected/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 3862
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam_1/Initializer/zeros/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam_1/Initializer/zeros"
  op: "Fill"
  input: "tower/fully_connected/biases/Adam_1/Initializer/zeros/shape_as_tensor"
  input: "tower/fully_connected/biases/Adam_1/Initializer/zeros/Const"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam_1"
  op: "VariableV2"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 3862
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam_1/Assign"
  op: "Assign"
  input: "tower/fully_connected/biases/Adam_1"
  input: "tower/fully_connected/biases/Adam_1/Initializer/zeros"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "tower/fully_connected/biases/Adam_1/read"
  op: "Identity"
  input: "tower/fully_connected/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "Adam/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "Adam/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "Adam/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.99999993922529e-09
      }
    }
  }
}
node {
  name: "Adam/update_tower/fully_connected/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "tower/fully_connected/weights"
  input: "tower/fully_connected/weights/Adam"
  input: "tower/fully_connected/weights/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_grads/clip_by_norm"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/update_tower/fully_connected/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "tower/fully_connected/biases"
  input: "tower/fully_connected/biases/Adam"
  input: "tower/fully_connected/biases/Adam_1"
  input: "beta1_power/read"
  input: "beta2_power/read"
  input: "ExponentialDecay"
  input: "Adam/beta1"
  input: "Adam/beta2"
  input: "Adam/epsilon"
  input: "clip_grads/clip_by_norm_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "Adam/mul"
  op: "Mul"
  input: "beta1_power/read"
  input: "Adam/beta1"
  input: "^Adam/update_tower/fully_connected/biases/ApplyAdam"
  input: "^Adam/update_tower/fully_connected/weights/ApplyAdam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "Adam/mul"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/mul_1"
  op: "Mul"
  input: "beta2_power/read"
  input: "Adam/beta2"
  input: "^Adam/update_tower/fully_connected/biases/ApplyAdam"
  input: "^Adam/update_tower/fully_connected/weights/ApplyAdam"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "Adam/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "Adam/mul_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "Adam/update"
  op: "NoOp"
  input: "^Adam/Assign"
  input: "^Adam/Assign_1"
  input: "^Adam/update_tower/fully_connected/biases/ApplyAdam"
  input: "^Adam/update_tower/fully_connected/weights/ApplyAdam"
  device: "/device:CPU:0"
}
node {
  name: "Adam/value"
  op: "Const"
  input: "^Adam/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "Adam"
  op: "AssignAdd"
  input: "global_step"
  input: "Adam/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "concat/concat_dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "Identity"
  input: "tower/fully_connected/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "train_input/shuffle_batch_join"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 9
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "global_step"
        string_val: "tower/fully_connected/biases"
        string_val: "tower/fully_connected/biases/Adam"
        string_val: "tower/fully_connected/biases/Adam_1"
        string_val: "tower/fully_connected/weights"
        string_val: "tower/fully_connected/weights/Adam"
        string_val: "tower/fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 9
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "beta1_power"
  input: "beta2_power"
  input: "global_step"
  input: "tower/fully_connected/biases"
  input: "tower/fully_connected/biases/Adam"
  input: "tower/fully_connected/biases/Adam_1"
  input: "tower/fully_connected/weights"
  input: "tower/fully_connected/weights/Adam"
  input: "tower/fully_connected/weights/Adam_1"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 9
          }
        }
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "global_step"
        string_val: "tower/fully_connected/biases"
        string_val: "tower/fully_connected/biases/Adam"
        string_val: "tower/fully_connected/biases/Adam_1"
        string_val: "tower/fully_connected/weights"
        string_val: "tower/fully_connected/weights/Adam"
        string_val: "tower/fully_connected/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 9
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 9
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "beta1_power"
  input: "save/RestoreV2"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "beta2_power"
  input: "save/RestoreV2:1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "tower/fully_connected/biases"
  input: "save/RestoreV2:3"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "tower/fully_connected/biases/Adam"
  input: "save/RestoreV2:4"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "tower/fully_connected/biases/Adam_1"
  input: "save/RestoreV2:5"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "tower/fully_connected/weights"
  input: "save/RestoreV2:6"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "tower/fully_connected/weights/Adam"
  input: "save/RestoreV2:7"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "tower/fully_connected/weights/Adam_1"
  input: "save/RestoreV2:8"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 128
          }
          dim {
            size: 3862
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_all/NoOp"
  op: "NoOp"
  input: "^save/Assign_2"
}
node {
  name: "save/restore_all/NoOp_1"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  device: "/device:CPU:0"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_all/NoOp"
  input: "^save/restore_all/NoOp_1"
}
node {
  name: "init/NoOp"
  op: "NoOp"
  input: "^global_step/Assign"
}
node {
  name: "init/NoOp_1"
  op: "NoOp"
  input: "^beta1_power/Assign"
  input: "^beta2_power/Assign"
  input: "^tower/fully_connected/biases/Adam/Assign"
  input: "^tower/fully_connected/biases/Adam_1/Assign"
  input: "^tower/fully_connected/biases/Assign"
  input: "^tower/fully_connected/weights/Adam/Assign"
  input: "^tower/fully_connected/weights/Adam_1/Assign"
  input: "^tower/fully_connected/weights/Assign"
  device: "/device:CPU:0"
}
node {
  name: "init"
  op: "NoOp"
  input: "^init/NoOp"
  input: "^init/NoOp_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "tower/fully_connected/weights"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "tower/fully_connected/biases"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "beta1_power"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "beta2_power"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "tower/fully_connected/weights/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "tower/fully_connected/weights/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "tower/fully_connected/biases/Adam"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "tower/fully_connected/biases/Adam_1"
  device: "/device:CPU:0"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@tower/fully_connected/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "train_input/input_producer/limit_epochs/epochs"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input/input_producer/limit_epochs/epochs"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 10
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 10
          }
        }
        string_val: "global_step"
        string_val: "tower/fully_connected/weights"
        string_val: "tower/fully_connected/biases"
        string_val: "beta1_power"
        string_val: "beta2_power"
        string_val: "tower/fully_connected/weights/Adam"
        string_val: "tower/fully_connected/weights/Adam_1"
        string_val: "tower/fully_connected/biases/Adam"
        string_val: "tower/fully_connected/biases/Adam_1"
        string_val: "train_input/input_producer/limit_epochs/epochs"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 10
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_1"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/values_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_2"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 10
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/GatherV2"
  op: "GatherV2"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  input: "report_uninitialized_variables/boolean_mask/GatherV2/axis"
  device: "/device:CPU:0"
  attr {
    key: "Taxis"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "batch_dims"
    value {
      i: 0
    }
  }
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^train_input/input_producer/limit_epochs/epochs/Assign"
}
node {
  name: "init_all_tables"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init_1"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "learning_rate"
  input: "train_input/input_producer/fraction_of_32_full"
  input: "train_input/shuffle_batch_join/fraction_over_1024_of_4096_full"
  input: "model/input_raw"
  input: "tower/tower/fully_connected/weights"
  input: "tower/tower/fully_connected/biases"
  input: "label_loss"
  input: "reg_loss"
  attr {
    key: "N"
    value {
      i: 8
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
versions {
  producer: 38
}
